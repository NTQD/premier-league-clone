"use strict";
(PULSE.app.templates.formelementcheckbox =
  '<div class="{{ additionalClass }}"> <div class="data-capture__form-communications-option"> <input class="data-capture-modal__checkbox-input {{ additionalInputClass }}" type="checkbox" id="{{ questionId }}_{{ campaignId }}" {{required}} name="{{ questionId }}"> <label class="data-capture-modal__checkbox-label" for="{{ questionId }}_{{ campaignId }}"> <span>{{{ title }}}</span> </label> <div class="error-message"> <div class="error-message__svg"> <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" fill="none"><g clip-path="url(#atclip0_1269_50161)" fill="#fff"><path d="M8 11a.667.667 0 100-1.333A.667.667 0 008 11zM7.333 5h1.333v4H7.333V5z"></path></g></svg> </div> <span>{{validationMessage}}</span> </div> </div> </div>'),
  (PULSE.app.templates.formelementcontainer =
    '<div class="{{ class }}"></div>'),
  (PULSE.app.templates.formelementcountry =
    '<div class="data-capture-modal__form-input-container"> <label class="data-capture-modal__form-label" for="region"> {{ title }} {{^required}} <span class="optional">*Optional</span> {{/required}} </label> <div class="data-capture__form-dropdown-container"> <select class="data-capture__form-input data-capture__form-input--dropdown js-country-dropdown" {{required}} name="region"> <option value="">Select a country</option> {{#displayUSAFirst}} <option value="229">USA</option> {{/displayUSAFirst}} <option value="241">England</option> <option value="242">Northern Ireland</option> <option value="243">Scotland</option> <option value="244">Wales</option> <option value="1">Afghanistan</option> <option value="267">Aland Islands</option> <option value="2">Albania</option> <option value="3">Algeria</option> <option value="4">American Samoa</option> <option value="5">Andorra</option> <option value="6">Angola</option> <option value="7">Anguilla</option> <option value="8">Antarctica</option> <option value="9">Antigua and Barbuda</option> <option value="10">Argentina</option> <option value="11">Armenia</option> <option value="12">Aruba</option> <option value="13">Australia</option> <option value="14">Austria</option> <option value="15">Azerbaijan</option> <option value="16">Bahamas</option> <option value="17">Bahrain</option> <option value="18">Bangladesh</option> <option value="19">Barbados</option> <option value="21">Belgium</option> <option value="22">Belize</option> <option value="23">Benin</option> <option value="24">Bermuda</option> <option value="25">Bhutan</option> <option value="26">Bolivia</option> <option value="279">Bonaire, Saint Eustatius and Saba</option> <option value="27">Bosnia-Herzegovina</option> <option value="28">Botswana</option> <option value="29">Bouvet Island</option> <option value="30">Brazil</option> <option value="31">British Indian Ocean Territory</option> <option value="32">British Virgin Islands</option> <option value="33">Brunei Darussalam</option> <option value="34">Bulgaria</option> <option value="35">Burkina Faso</option> <option value="36">Burundi</option> <option value="37">Cambodia</option> <option value="38">Cameroon</option> <option value="39">Canada</option> <option value="40">Cape Verde</option> <option value="41">Cayman Islands</option> <option value="42">Central African Republic</option> <option value="43">Chad</option> <option value="44">Chile</option> <option value="45">China</option> <option value="46">Christmas Island</option> <option value="47">Cocos Islands</option> <option value="48">Colombia</option> <option value="49">Comoros</option> <option value="51">Congo</option> <option value="50">Congo, Democratic Republic of</option> <option value="52">Cook Islands</option> <option value="53">Costa Rica</option> <option value="97">Croatia</option> <option value="55">Cuba</option> <option value="281">Curacao</option> <option value="56">Cyprus</option> <option value="57">Czech Republic</option> <option value="58">Denmark</option> <option value="59">Djibouti</option> <option value="60">Dominica</option> <option value="61">Dominican Republic</option> <option value="62">Ecuador</option> <option value="63">Egypt</option> <option value="64">El Salvador</option> <option value="65">Equatorial Guinea</option> <option value="66">Eritrea</option> <option value="67">Estonia</option> <option value="68">Ethiopia</option> <option value="69">Faeroe Islands</option> <option value="70">Falkland Islands</option> <option value="71">Fiji</option> <option value="72">Finland</option> <option value="73">France</option> <option value="74">French Guiana</option> <option value="75">French Polynesia</option> <option value="76">French Southern Territories</option> <option value="77">Gabon</option> <option value="78">Gambia</option> <option value="79">Georgia</option> <option value="80">Germany</option> <option value="81">Ghana</option> <option value="82">Gibraltar</option> <option value="83">Greece</option> <option value="84">Greenland</option> <option value="85">Grenada</option> <option value="86">Guadaloupe</option> <option value="87">Guam</option> <option value="88">Guatemala</option> <option value="271">Guernsey</option> <option value="89">Guinea</option> <option value="90">Guinea-Bissau</option> <option value="91">Guyana</option> <option value="92">Haiti</option> <option value="93">Heard and McDonald Islands</option> <option value="94">Holy See</option> <option value="95">Honduras</option> <option value="96">Hong Kong SAR, China</option> <option value="98">Hungary</option> <option value="99">Iceland</option> <option value="100">India</option> <option value="101">Indonesia</option> <option value="102">Iran</option> <option value="103">Iraq</option> <option value="104">Ireland</option> <option value="273">Isle of Man</option> <option value="105">Israel</option> <option value="106">Italy</option> <option value="54">Ivory Coast</option> <option value="107">Jamaica</option> <option value="108">Japan</option> <option value="275">Jersey</option> <option value="109">Jordan</option> <option value="110">Kazakhstan</option> <option value="111">Kenya</option> <option value="112">Kiribati</option> <option value="286">Kosovo</option> <option value="115">Kuwait</option> <option value="116">Kyrgyzstan</option> <option value="117">Laos</option> <option value="118">Latvia</option> <option value="119">Lebanon</option> <option value="120">Lesotho</option> <option value="121">Liberia</option> <option value="122">Libya</option> <option value="123">Liechtenstein</option> <option value="124">Lithuania</option> <option value="125">Luxembourg</option> <option value="126">Macao, China</option> <option value="127">Macedonia</option> <option value="128">Madagascar</option> <option value="129">Malawi</option> <option value="130">Malaysia</option> <option value="131">Maldives</option> <option value="132">Mali</option> <option value="133">Malta</option> <option value="134">Marshall Islands</option> <option value="135">Martinique</option> <option value="136">Mauritania</option> <option value="137">Mauritius</option> <option value="138">Mayotte</option> <option value="139">Mexico</option> <option value="140">Micronesia</option> <option value="141">Moldova</option> <option value="142">Monaco</option> <option value="143">Mongolia</option> <option value="240">Montenegro</option> <option value="144">Montserrat</option> <option value="145">Morocco</option> <option value="146">Mozambique</option> <option value="147">Myanmar</option> <option value="148">Namibia</option> <option value="149">Nauru</option> <option value="150">Nepal</option> <option value="152">Netherlands</option> <option value="153">New Caledonia</option> <option value="154">New Zealand</option> <option value="155">Nicaragua</option> <option value="156">Niger</option> <option value="157">Nigeria</option> <option value="158">Niue</option> <option value="159">Norfolk Island</option> <option value="113">North Korea</option> <option value="160">Northern Mariana Islands</option> <option value="161">Norway</option> <option value="162">Oman</option> <option value="163">Pakistan</option> <option value="164">Palau</option> <option value="165">Palestine</option> <option value="166">Panama</option> <option value="167">Papua New Guinea</option> <option value="168">Paraguay</option> <option value="169">Peru</option> <option value="170">Philippines</option> <option value="171">Pitcairn Island</option> <option value="172">Poland</option> <option value="173">Portugal</option> <option value="174">Puerto Rico</option> <option value="175">Qatar</option> <option value="176">Reunion</option> <option value="177">Romania</option> <option value="179">Rwanda</option> <option value="269">Saint Barthelemy</option> <option value="277">Saint Martin</option> <option value="185">Samoa</option> <option value="186">San Marino</option> <option value="187">Sao Tome and Principe</option> <option value="188">Saudi Arabia</option> <option value="189">Senegal</option> <option value="190">Serbia</option> <option value="191">Seychelles</option> <option value="192">Sierra Leone</option> <option value="193">Singapore</option> <option value="283">Sint Maarten</option> <option value="194">Slovakia</option> <option value="195">Slovenia</option> <option value="196">Solomon Islands</option> <option value="197">Somalia</option> <option value="198">South Africa</option> <option value="199">South Georgia and the South Sandwich Islands</option> <option value="114">South Korea</option> <option value="285">South Sudan</option> <option value="200">Spain</option> <option value="201">Sri Lanka</option> <option value="180">St. Helena</option> <option value="181">St. Kitts and Nevis</option> <option value="182">St. Lucia</option> <option value="183">St. Pierre and Miquelon</option> <option value="184">St. Vincent and the Grenadines</option> <option value="202">Sudan</option> <option value="203">Suriname</option> <option value="204">Svalbard &amp; Jan Mayen Islands</option> <option value="205">Swaziland</option> <option value="206">Sweden</option> <option value="207">Switzerland</option> <option value="208">Syria</option> <option value="209">Taiwan, China</option> <option value="210">Tajikistan</option> <option value="211">Tanzania</option> <option value="212">Thailand</option> <option value="213">Timor-Leste</option> <option value="214">Togo</option> <option value="215">Tokelau</option> <option value="216">Tonga</option> <option value="217">Trinidad and Tobago</option> <option value="218">Tunisia</option> <option value="219">Turkey</option> <option value="220">Turkmenistan</option> <option value="221">Turks and Caicos Islands</option> <option value="222">Tuvalu</option> <option value="224">Uganda</option> <option value="225">Ukraine</option> <option value="226">United Arab Emirates</option> <option value="228">United States Minor Outlying Islands</option> <option value="230">Uruguay</option> <option value="223">US Virgin Islands</option> {{^displayUSAFirst}} <option value="229">USA</option> {{/displayUSAFirst}} <option value="231">Uzbekistan</option> <option value="232">Vanuatu</option> <option value="233">Venezuela</option> <option value="234">Vietnam</option> <option value="235">Wallis and Futuna Islands</option> <option value="236">Western Sahara</option> <option value="237">Yemen</option> <option value="238">Zambia</option> <option value="239">Zimbabwe</option> </select> {{#required}} <div class="error-message"> <div class="error-message__svg"> <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" fill="none"><g clip-path="url(#atclip0_1269_50161)" fill="#fff"><path d="M8 11a.667.667 0 100-1.333A.667.667 0 008 11zM7.333 5h1.333v4H7.333V5z"></path></g></svg> </div> <span>{{validationMessage}}</span> </div> {{/required}} </div> </div> <div class="data-capture-modal__form-input-container u-hide js-usa-state-container"> <label class="data-capture-modal__form-label" for="state"> State {{^required}} <span class="optional">*Optional</span> {{/required}} </label> <div class="data-capture__form-dropdown-container"> <select id="state" name="state" class="data-capture__form-input data-capture__form-input--dropdown js-usa-state" data-required="{{required}}"> <option value="">Select a state</option> <option value="AL">Alabama</option> <option value="AK">Alaska</option> <option value="AZ">Arizona</option> <option value="AR">Arkansas</option> <option value="CA">California</option> <option value="CO">Colorado</option> <option value="CT">Connecticut</option> <option value="DE">Delaware</option> <option value="DC">District of Columbia</option> <option value="FL">Florida</option> <option value="GA">Georgia</option> <option value="HI">Hawaii</option> <option value="ID">Idaho</option> <option value="IL">Illinois</option> <option value="IN">Indiana</option> <option value="IA">Iowa</option> <option value="KS">Kansas</option> <option value="KY">Kentucky</option> <option value="LA">Louisiana</option> <option value="ME">Maine</option> <option value="MD">Maryland</option> <option value="MA">Massachusetts</option> <option value="MI">Michigan</option> <option value="MN">Minnesota</option> <option value="MS">Mississippi</option> <option value="MO">Missouri</option> <option value="MT">Montana</option> <option value="NE">Nebraska</option> <option value="NV">Nevada</option> <option value="NH">New Hampshire</option> <option value="NJ">New Jersey</option> <option value="NM">New Mexico</option> <option value="NY">New York</option> <option value="NC">North Carolina</option> <option value="ND">North Dakota</option> <option value="OH">Ohio</option> <option value="OK">Oklahoma</option> <option value="OR">Oregon</option> <option value="PA">Pennsylvania</option> <option value="RI">Rhode Island</option> <option value="SC">South Carolina</option> <option value="SD">South Dakota</option> <option value="TN">Tennessee</option> <option value="TX">Texas</option> <option value="UT">Utah</option> <option value="VT">Vermont</option> <option value="VA">Virginia</option> <option value="WA">Washington</option> <option value="WV">West Virginia</option> <option value="WI">Wisconsin</option> <option value="WY">Wyoming</option> </select> {{#required}} <div class="error-message"> <svg class="error-message__svg" fill="" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg"> <g clip-path="url(#clip0_1269_50161)"> <path d="M7.99967 10.9998C8.36786 10.9998 8.66634 10.7014 8.66634 10.3332C8.66634 9.96498 8.36786 9.6665 7.99967 9.6665C7.63148 9.6665 7.33301 9.96498 7.33301 10.3332C7.33301 10.7014 7.63148 10.9998 7.99967 10.9998Z" fill="white"/> <path d="M7.33301 5H8.66634V9H7.33301V5Z" fill="white"/> </g> <defs> <clipPath id="clip0_1269_50161"> <rect fill="white" transform="translate(4 4)"/> </clipPath> </defs> </svg> <span>{{validationMessage}}</span> </div> {{/required}} </div> </div> <div class="data-capture-modal__form-input-container u-hide js-india-state-container"> <label class="data-capture-modal__form-label" for="indiaState"> State {{^required}} <span class="optional">*Optional</span> {{/required}} </label> <div class="data-capture__form-dropdown-container"> <select id="indiaState" name="indiaState" class="data-capture__form-input data-capture__form-input--dropdown js-india-state" data-required="{{required}}"> <option value="">Select a state</option> <optgroup label="North"> <option value="1">Arunachal Pradesh</option> <option value="2">Chandigarh</option> <option value="3">Delhi-NCR</option> <option value="4">Haryana - Delhi</option> <option value="5">Haryana - Other</option> <option value="6">Himachal</option> <option value="7">Jammu &amp; Kashmir</option> <option value="8">Ladakh</option> <option value="9">Pradesh</option> <option value="10">Punjab</option> <option value="11">Rajasthan - Jaipur</option> <option value="12">Rajasthan - Other</option> <option value="13">Uttarakhand</option> <option value="14">Uttar Pradesh - Delhi</option> <option value="15">Uttar Pradesh - Other</option> </optgroup> <optgroup label="West"> <option value="16">Dadra &amp; Nagar Haveli</option> <option value="17">Daman &amp; Diu</option> <option value="18">Goa</option> <option value="19">Gujarat - Surat</option> <option value="20">Gujarat - Ahmedabad</option> <option value="21">Gujarat - Other</option> <option value="22">Madhya Pradesh</option> <option value="23">Maharashtra - Mumbai</option> <option value="24">Maharashtra - Nagpur</option> <option value="25">Maharashtra - Pune</option> <option value="26">Maharashtra - Other</option> </optgroup> <optgroup label="East"> <option value="27">Assam</option> <option value="28">Bihar</option> <option value="29">Chhattisgarh</option> <option value="30">Jharkhand</option> <option value="31">Manipur</option> <option value="32">Meghalaya</option> <option value="33">Mizoram</option> <option value="34">Nagaland</option> <option value="35">Odisha</option> <option value="36">Sikkim</option> <option value="37">Tripura</option> <option value="38">West Bengal - Kolkata</option> <option value="39">West Bengal - Other</option> </optgroup> <optgroup label="South"> <option value="40">Andaman &amp; Nicobar Islands</option> <option value="41">Andhra Pradesh - Visakhapatnam</option> <option value="42">Andhra Pradesh - Other</option> <option value="43">Karnataka - Bengaluru</option> <option value="44">Karnataka - Other</option> <option value="45">Kerala</option> <option value="46">Lakshadweep</option> <option value="47">Puducherry</option> <option value="48">Tamil Nadu - Chennai</option> <option value="49">Tamil Nadu - Other</option> <option value="50">Telangana - Hyderabad</option> <option value="51">Telangana - Other</option> </optgroup> </select> {{#required}} <div class="error-message"> <div class="error-message__svg"> <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" fill="none"><g clip-path="url(#atclip0_1269_50161)" fill="#fff"><path d="M8 11a.667.667 0 100-1.333A.667.667 0 008 11zM7.333 5h1.333v4H7.333V5z"></path></g></svg> </div> <span>{{validationMessage}}</span> </div> {{/required}} </div> </div>'),
  (PULSE.app.templates.formelementdateofbirth =
    '<div class="data-capture-modal__form-input-container {{additionalClass}}"> <label class="data-capture-modal__form-label" for="{{ questionId }}"> {{ title }} {{^required}} <span class="optional">*Optional</span> {{/required}} </label> <p>Example: 21 01 2015</p> <div class="data-capture-modal__form-input-wrapper"> <div class="data-capture-modal__dob-wrapper"> <div class="data-capture-modal__dob-input-wrapper"> <label class="data-capture-modal__form-label" for="{{ questionId }}_day">Day</label> <input class="data-capture-modal__form-input" min="1" max="31" type="number" inputmode="numeric" name="{{ questionId }}_day" pattern="^.{1,2}$" {{required}} oninput="this.value=this.value.slice(0,this.maxLength)" placeholder="" id="{{ questionId }}_day" maxlength="2"> </div> <div class="data-capture-modal__dob-input-wrapper"> <label class="data-capture-modal__form-label" for="{{ questionId }}_month">Month</label> <input class="data-capture-modal__form-input" min="1" max="12" type="number" inputmode="numeric" name="{{ questionId }}_month" pattern="^.{1,2}$" {{required}} oninput="this.value=this.value.slice(0,this.maxLength)" placeholder="" id="{{ questionId }}_month" maxlength="2"> </div> <div class="data-capture-modal__dob-input-wrapper"> <label class="data-capture-modal__form-label" for="{{ questionId }}_year">Year</label> <input class="data-capture-modal__form-input" min="1900" max="2050" type="number" inputmode="numeric" name="{{ questionId }}_year" pattern="^.{4,4}$" {{required}} oninput="this.value=this.value.slice(0,this.maxLength)" placeholder="" id="{{ questionId }}_year" maxlength="4"> </div> <div class="error-message"> <div class="error-message__svg"> <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" fill="none"><g clip-path="url(#atclip0_1269_50161)" fill="#fff"><path d="M8 11a.667.667 0 100-1.333A.667.667 0 008 11zM7.333 5h1.333v4H7.333V5z"></path></g></svg> </div> <span>{{validationMessage}}</span> </div> </div> </div> </div>'),
  (PULSE.app.templates.formelementdropdown =
    '<div class="data-capture-modal__form-input-container {{ additionalClass }}"> <label class="data-capture-modal__form-label" for="{{ questionId }}"> {{ title }} {{^required}} <span class="optional">*Optional</span> {{/required}} </label> <div class="data-capture__form-dropdown-container"> <select class="data-capture__form-input data-capture__form-input--dropdown {{ additionalInputClass }}" {{required}} name="{{ questionId }}"> {{^hideSelectOption}} <option value="">Select an option</option> {{/hideSelectOption}} {{#dropdownOptions}} <option value="{{.}}">{{.}}</option> {{/dropdownOptions}} </select> {{#required}} <div class="error-message"> <div class="error-message__svg"> <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" fill="none"><g clip-path="url(#atclip0_1269_50161)" fill="#fff"><path d="M8 11a.667.667 0 100-1.333A.667.667 0 008 11zM7.333 5h1.333v4H7.333V5z"></path></g></svg> </div> <span>{{validationMessage}}</span> </div> {{/required}} </div> </div> '),
  (PULSE.app.templates.formelementemail =
    '<div class="data-capture-modal__form-input-container {{ additionalClass }}"> <label class="data-capture-modal__form-label" for="{{ questionId }}"> {{ title }} {{^required}} <span class="optional">*Optional</span> {{/required}} </label> <div class="data-capture__form-input-wrapper"> <input class="data-capture__form-input {{ additionalInputClass }}" type="{{ type }}" name="{{ questionId }}" pattern="^[w-.]+@([w-]+.)+[w-]{2,4}$" {{required}} placeholder="{{title}}" id="{{ questionId }}"> <div class="error-message"> <div class="error-message__svg"> <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" fill="none"><g clip-path="url(#atclip0_1269_50161)" fill="#fff"><path d="M8 11a.667.667 0 100-1.333A.667.667 0 008 11zM7.333 5h1.333v4H7.333V5z"></path></g></svg> </div> <span>{{validationMessage}}</span> </div> </div> </div>'),
  (PULSE.app.templates.formelementfavouriteclub =
    '<div class="data-capture-modal__form-input-container"> <label class="data-capture-modal__form-label" for="favouriteclub"> {{ title }} {{^required}} <span class="optional">*Optional</span> {{/required}} </label> <div class="data-capture__form-dropdown-container"> <select class="data-capture__form-input data-capture__form-input--dropdown js-favourite-club" {{required}} name="favouriteclub"> <option value="">{{selectYourFavouriteClubLabel}}</option> <option value="t3">Arsenal</option> <option value="t7">Aston Villa</option> <option value="t91">AFC Bournemouth</option> <option value="t94">Brentford</option> <option value="t36">Brighton and Hove Albion</option> <option value="t8">Chelsea</option> <option value="t31">Crystal Palace</option> <option value="t11">Everton</option> <option value="t54">Fulham</option> <option value="t40">Ipswich Town</option> <option value="t13">Leicester City</option> <option value="t14">Liverpool</option> <option value="t43">Manchester City</option> <option value="t1">Manchester United</option> <option value="t4">Newcastle United</option> <option value="t17">Nottingham Forest</option> <option value="t20">Southampton</option> <option value="t6">Tottenham Hotspur</option> <option value="t21">West Ham United</option> <option value="t39">Wolverhampton Wanderers</option> <option value="-1">General PL Fan</option> </select> {{#required}} <div class="error-message"> <div class="error-message__svg"> <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" fill="none"><g clip-path="url(#atclip0_1269_50161)" fill="#fff"><path d="M8 11a.667.667 0 100-1.333A.667.667 0 008 11zM7.333 5h1.333v4H7.333V5z"></path></g></svg> </div> <span>{{validationMessage}}</span> </div> {{/required}} </div> </div> '),
  (PULSE.app.templates.formelementgender =
    '<div class="data-capture-modal__form-input-container"> <label class="data-capture-modal__form-label" for="gender"> {{ title }} {{^required}} <span class="optional">*Optional</span> {{/required}} </label> <div class="data-capture__form-dropdown-container"> <select class="data-capture__form-input data-capture__form-input--dropdown" {{required}} name="gender"> <option value="">Select a gender</option> <option value="M">Male</option> <option value="F">Female</option> <option value="U">Unspecified</option> </select> {{#required}} <div class="error-message"> <div class="error-message__svg"> <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" fill="none"><g clip-path="url(#atclip0_1269_50161)" fill="#fff"><path d="M8 11a.667.667 0 100-1.333A.667.667 0 008 11zM7.333 5h1.333v4H7.333V5z"></path></g></svg> </div> <span>{{validationMessage}}</span> </div> {{/required}} </div> </div> '),
  (PULSE.app.templates.formelementoptin =
    '{{#isFirst}} <h3 class="data-capture-modal__checkbox-title">{{ containerTitle }}</h3> <p class="data-capture-modal__checkbox-text">{{ containerText }}</p> {{/isFirst}} <div class="data-capture__form-communications-option-wrapper {{optInType}}"> <div class="data-capture__form-communications-option"> <input class="data-capture-modal__checkbox-input js-{{ optInType }}-opt-in-input" type="checkbox" {{checked}} value="{{ value }}" id="{{ questionId }}" {{required}} name="{{ questionId }}"> <label class="data-capture-modal__checkbox-label" for="{{ questionId }}"> {{#clubBadge}} <span class="badge badge-image-container" data-widget="club-badge-image" data-size="50"> <img class="badge-image badge-image--32 js-badge-image" src="{{ clubBadge }}" srcset="{{ clubBadge }}, {{ clubBadgeRetina }} 2x"> </span> {{/clubBadge}} <span>{{ title }}</span> </label> </div> </div>'),
  (PULSE.app.templates.formelementpostcode =
    '<div class="data-capture-modal__form-input-container js-{{questionId}}-container u-hide"> <label class="data-capture-modal__form-label" for="{{ questionId }}"> {{ title }} {{^required}} <span class="optional">*Optional</span> {{/required}} </label> <div class="data-capture-modal__form-input-wrapper"> <input class="data-capture-modal__form-input js-{{questionId}}" type="{{type}}" name="{{ questionId }}" pattern="^.{1,50}$" {{required}} data-required="{{required}}" placeholder="{{ title }}" id="{{ questionId }}" maxlength="50"> <div class="error-message"> <div class="error-message__svg"> <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" fill="none"><g clip-path="url(#atclip0_1269_50161)" fill="#fff"><path d="M8 11a.667.667 0 100-1.333A.667.667 0 008 11zM7.333 5h1.333v4H7.333V5z"></path></g></svg> </div> <span>{{validationMessage}}</span> </div> </div> </div>'),
  (PULSE.app.templates.formelementtel =
    '<div class="data-capture-modal__form-input-container"> <label class="data-capture-modal__form-label" for="{{ questionId }}"> {{ title }} {{^required}} <span class="optional">*Optional</span> {{/required}} </label> <div class="data-capture__form-input-wrapper"> <input class="data-capture__form-input" type="tel" pattern="^[0-9()-]{4,30}$" title="{{ title }}" {{ required }} type="text" name="{{ questionId }}" placeholder="{{ title }}" id="{{questionId}}"> <div class="error-message"> <div class="error-message__svg"> <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" fill="none"><g clip-path="url(#atclip0_1269_50161)" fill="#fff"><path d="M8 11a.667.667 0 100-1.333A.667.667 0 008 11zM7.333 5h1.333v4H7.333V5z"></path></g></svg> </div> <span>{{validationMessage}}</span> </div> </div> </div>'),
  (PULSE.app.templates.formelementtext =
    '<div class="data-capture-modal__form-input-container {{ additionalClass }}"> <label class="data-capture-modal__form-label" for="{{ questionId }}"> {{ title }} {{^required}} <span class="optional">*Optional</span> {{/required}} </label> <div class="data-capture-modal__form-input-wrapper"> <input class="data-capture-modal__form-input {{ additionalInputClass }}" type="{{type}}" name="{{ questionId }}" pattern="^.{1,50}$" {{required}} placeholder="{{ title }}" id="{{ questionId }}" maxlength="50"> <div class="error-message"> <div class="error-message__svg"> <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" fill="none"><g clip-path="url(#atclip0_1269_50161)" fill="#fff"><path d="M8 11a.667.667 0 100-1.333A.667.667 0 008 11zM7.333 5h1.333v4H7.333V5z"></path></g></svg> </div> <span>{{validationMessage}}</span> </div> </div> </div>'),
  (function (o, a, t, e) {
    const n = "fail",
      i = "success",
      p = "1",
      l = "11";
    (o.dataCaptureGeneric = function (e) {
      const p = this;
      (p.container = e),
        (p.openModalButton = e.querySelector(".js-open-modal")),
        (p.overwriteModalButton = "true" === e.dataset.overwriteModalButton),
        (p.campaignId = e.dataset.campaignId),
        (p.emailOptInPL = e.dataset.emailOptInPl),
        (p.emailOptInFPL = e.dataset.emailOptInFpl),
        (p.minimumAge = e.dataset.minimumAge),
        (p.clubOptIns = e.dataset.clubOptIns),
        (p.ctaSignedInText = p.openModalButton.dataset.ctaSignedInText),
        (p.ctaSignedOutText = p.openModalButton.dataset.ctaSignedOutText),
        (p.hasFavouriteClubDropdown = "true" === e.dataset.hasFavouriteClub),
        (p.sponsorOptIns = e.dataset.sponsorOptIns),
        (p.dataCaptureType = e.dataset.dataCaptureType.toLowerCase()),
        (p.customTextFields = parseInt(e.dataset.customTextFields)),
        (p.customDropdownFields = parseInt(e.dataset.customDropdownFields)),
        (p.customCheckboxFields = parseInt(e.dataset.customCheckboxFields)),
        (p.customOptionalTextFields = parseInt(
          e.dataset.customOptionalTextFields
        )),
        (p.customOptionalCheckboxFields = parseInt(
          e.dataset.customOptionalCheckboxFields
        )),
        (p.submitSignedInForm = "true" === e.dataset.submitSignedInForm),
        (p.formFields = JSON.parse(e.dataset.formFields)),
        (p.userLoginFiredState = t.url.getParam("state")),
        (p.formObject = a.dataCaptureHelpers.getFormObject(
          p.formFields,
          p.customTextFields,
          p.customOptionalTextFields,
          p.customCheckboxFields,
          p.customOptionalCheckboxFields,
          p.customDropdownFields,
          p.dataCaptureType
        )),
        (p.userHasEntered = t.localStorage.getStorage(`DC_${p.campaignId}`)),
        p.setListeners(),
        o.userData || o.userDataRequested
          ? o.userData &&
            ((p.userHasSignedIn =
              "true" ===
              t.localStorage.getStorage(`DC_${p.campaignId}_signed-in`)),
            p.showWidget(o.userData),
            (p.userLoginFiredState != i && p.userLoginFiredState != n) ||
              !p.userHasSignedIn ||
              p.clubOptIns ||
              p.hasFavouriteClubDropdown ||
              setTimeout(() => {
                p.dispatchModalEvent(p.userLoginFiredState),
                  t.localStorage.clearStorage(`DC_${p.campaignId}_signed-in`);
              }))
          : (a.getUserAccount(p.processUserData.bind(p)),
            (o.userDataRequested = !0)),
        (!p.clubOptIns && !p.hasFavouriteClubDropdown) ||
          o.clubDataCalled ||
          (p.getClubData(), (o.clubDataCalled = !0));
    }),
      (o.dataCaptureGeneric.prototype.setListeners = function () {
        const o = this;
        window.addEventListener("dataCaptureTriggered", () => {
          o.dispatchModalEvent();
        }),
          o.openModalButton.addEventListener("click", () => {
            o.dispatchModalEvent();
          }),
          document.body.addEventListener(
            a.event.DATA_CAPTURE.USER_DATA,
            (a) => {
              (o.userHasSignedIn = !0),
                o.showWidget(a.detail.userData),
                (o.userLoginFiredState != i && o.userLoginFiredState != n) ||
                  !o.userHasSignedIn ||
                  setTimeout(() => {
                    o.dispatchModalEvent(o.userLoginFiredState),
                      t.localStorage.clearStorage(
                        `DC_${o.campaignId}_signed-in`
                      );
                  });
            }
          );
      }),
      (o.dataCaptureGeneric.prototype.showWidget = function (a) {
        const t = this;
        let n = !1;
        if (a.signedIn) {
          if (t.userHasEntered) return;
          if (t.submitSignedInForm)
            return (
              t.ctaSignedInText &&
                (t.openModalButton.innerHTML = t.ctaSignedInText),
              void t.container.classList.remove("u-hide")
            );
          const e = t.sponsorOptIns ? t.sponsorOptIns?.split(",") : [];
          "true" === t.emailOptInPL && e.push(p),
            "true" === t.emailOptInFPL && e.push(l);
          const i = [];
          !t.clubOptIns ||
            t.clubOptIns?.split(",").forEach((o) => {
              i.push(o.replace("t", ""));
            }),
            a.pl_communications &&
              e.forEach((o) => {
                a?.pl_communications?.find(
                  (a) => a.plmarketing === parseInt(o)
                ) ||
                  !1 ||
                  (n = !0);
              }),
            a.club_communications &&
              !n &&
              i.forEach((a) => {
                o.userData?.club_communications?.find(
                  (o) => o.club === parseInt(a) && o.club_communications
                ) ||
                  !1 ||
                  (n = !0);
              }),
            n && t.container.classList.remove("u-hide");
        } else if (!t.userHasEntered) {
          let o = "";
          t.ctaSignedOutText
            ? (o = t.ctaSignedOutText)
            : ((o = e.lookup(
                `label.dataCapture.generic.button.signedOut.${t.campaignId}`
              )),
              o ==
                `label.dataCapture.generic.button.signedOut.${t.campaignId}` &&
                (o = e.lookup("label.dataCapture.generic.button.signedOut"))),
            t.overwriteModalButton && (t.openModalButton.innerHTML = o),
            t.container.classList.remove("u-hide");
        }
      }),
      (o.dataCaptureGeneric.prototype.dispatchModalEvent = function () {
        let o =
          arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null;
        const t = this;
        (t.answer = t.container.dataset.answer),
          t.answer &&
            t.answer.includes(",") &&
            (t.answer = t.answer.split(",")),
          a.event.dispatch(
            a.event.DATA_CAPTURE.OPEN_MODAL,
            {
              campaignId: t.campaignId,
              answer: t.answer,
              emailOptInPL: t.emailOptInPL,
              emailOptInFPL: t.emailOptInFPL,
              clubOptIns: t.clubOptIns,
              favouriteClubDropdown: t.hasFavouriteClubDropdown,
              sponsorOptIns: t.sponsorOptIns,
              submitSignedInForm: t.submitSignedInForm,
              formObject: t.formObject,
              minimumAge: t.minimumAge,
              signInState: o,
              dataCaptureType: t.dataCaptureType,
            },
            document.body
          );
      }),
      (o.dataCaptureGeneric.prototype.getClubData = function () {
        let a = {
            altIds: !0,
            comps: o.competition.FIRST,
            compSeasons: o.newSeason.FIRST,
            pageSize: 100,
          },
          e = {
            url: o.common.createApiPath("teams.all", a),
            method: "GET",
            callback: this.setClubData,
            target: this,
            forceCallback: !0,
          };
        t.data.manager.add(e);
      }),
      (o.dataCaptureGeneric.prototype.setClubData = function (t) {
        (o.clubData = []),
          t && t.content && (o.clubData = t),
          (this.clubDataRetrieved = !0),
          this.userDataRetrieved &&
            a.event.dispatch(
              a.event.DATA_CAPTURE.USER_DATA,
              { userData: o.userData },
              document.body
            );
      }),
      (o.dataCaptureGeneric.prototype.processUserData = function (t) {
        const e = this;
        (o.userData = t),
          (e.userDataRetrieved = !0),
          (e.clubDataRetrieved ||
            (!e.clubOptIns && !e.hasFavouriteClubDropdown)) &&
            a.event.dispatch(
              a.event.DATA_CAPTURE.USER_DATA,
              { userData: t },
              document.body
            );
      });
    let s = document.querySelectorAll('[data-widget="data-capture-generic"]');
    for (let a = 0; a < s.length; a++) new o.dataCaptureGeneric(s[a]);
  })(PULSE.app, PULSE.app.common, PULSE.core, PULSE.I18N),
  (function (o, a, t, e) {
    const n = 1,
      i = 11,
      p = "fail";
    (o.dataCaptureModal = function (o) {
      const a = this;
      (a.container = o),
        (a.modalOpen = !1),
        (a.closeModalBtn = o.querySelector(".js-close-modal")),
        (a.signInContainer = o.querySelector(".js-sign-in-container")),
        (a.signInBackButton = o.querySelector(".js-back-button")),
        (a.signInLink = o.querySelector(".js-sign-in-link")),
        (a.submitBtn = o.querySelector(".js-modal-submit-btn")),
        (a.formContainer = o.querySelector(".js-form-container")),
        (a.dataCaptureForm = o.querySelector(".js-data-capture-form")),
        (a.showPasswordButton = o.querySelector(".js-show-password-btn")),
        (a.successFormSignedIn = o.querySelector(".js-success-form-signed-in")),
        (a.successFormText = o.querySelector(".js-success-text")),
        (a.successFormSignedOut = o.querySelector(
          ".js-success-form-signed-out"
        )),
        (a.errorForm = o.querySelector(".js-error-form")),
        (a.signedOutSuccessBody = o.querySelector(
          ".js-signed-out-success-body"
        )),
        (a.scrollContainer = o.querySelector(".js-scroll-container")),
        (a.signInErrorMessage = o.querySelector(".js-sign-in-error-message")),
        (a.completeRegistrationLink = o.querySelector(
          ".js-complete-registration-link"
        )),
        (a.signInTitle = o.querySelector(".js-sign-in-title")),
        (a.signedOutTitle = o.querySelector(".js-signed-out-title")),
        (a.infoText = o.querySelector(".js-information-text")),
        (a.signInForm = o.querySelector(".js-sign-in-form")),
        (a.signedInContainer = o.querySelector(".js-signed-in-container")),
        (a.userName = o.querySelector(".js-user-name")),
        (a.isUserLoggedIn = !1),
        (a.userHasEntered = !1),
        a.setFormValidationListeners(),
        a.setListeners();
    }),
      (o.dataCaptureModal.prototype.setListeners = function () {
        const e = this;
        e.signInLink.addEventListener("click", () => {
          dataLayer.push({ event: "dc_sign_in", dcCampaignId: e.campaignId }),
            e.toggleSignInScreen(!1, !1);
        }),
          e.completeRegistrationLink.addEventListener("click", (o) => {
            o.preventDefault(), e.registrationClick();
          }),
          e.signInBackButton.addEventListener("click", () => {
            dataLayer.push({
              event: "dc_sign_in_back",
              dcCampaignId: e.campaignId,
            }),
              e.toggleSignInScreen(!0, !1);
          }),
          e.showPasswordButton.addEventListener(
            "click",
            e.showPassword.bind(e)
          ),
          e.signInForm.addEventListener("submit", (o) => {
            t.localStorage.setStorage(`DC_${e.campaignId}_signed-in`, !0);
          }),
          e.closeModalBtn.addEventListener("click", () => {
            e.toggleModal(e),
              a.event.dispatch(
                a.event.DATA_CAPTURE.CLOSE_MODAL,
                { campaignId: e.campaignId },
                document.body
              );
          }),
          e.submitBtn.addEventListener("click", e.formSubmit.bind(e)),
          document.body.addEventListener("keyup", function (o) {
            "Escape" == o.key && e.modalOpen && e.toggleModal();
          }),
          document.body.addEventListener(
            a.event.DATA_CAPTURE.OPEN_MODAL,
            (o) => {
              e.toggleModal(), e.init(o.detail);
            }
          ),
          (o.modalEventListenerSet = !0);
      }),
      (o.dataCaptureModal.prototype.registrationClick = function (o) {
        const a = this;
        let t = !1;
        dataLayer.push({
          event: "dc_register_button_click",
          dcCampaignId: a.campaignId,
          signedInUser: a.isUserLoggedIn ? "signedIn" : "signedOut",
          eventCallback: function () {
            t ||
              ((t = !0),
              window.open(
                a.completeRegistrationLink.getAttribute("href"),
                "_blank"
              ));
          },
        });
      }),
      (o.dataCaptureModal.prototype.toggleModal = function () {
        const o = this;
        a.urlHelpers.removeURLParam("state"),
          o.modalOpen &&
            ((o.dataCaptureForm.innerHTML = ""),
            o.toggleSignInScreen(!0),
            o.dataCaptureForm.classList.remove("u-hide"),
            o.formContainer.classList.remove("u-hide"),
            o.signInContainer.classList.remove("u-hide"),
            o.successFormSignedOut.classList.add("u-hide"),
            o.successFormSignedIn.classList.add("u-hide"),
            o.infoText.classList.add("u-hide"),
            o.errorForm.classList.add("u-hide"),
            o.userHasEntered ||
              dataLayer.push({
                event: "dc_close_modal",
                dcCampaignId: o.campaignId,
                signedInUser: o.isUserLoggedIn ? "signedIn" : "signedOut",
              })),
          (o.modalOpen = !o.modalOpen),
          o.container.classList.toggle("is-open"),
          document.body.classList.toggle("fixedBody");
      }),
      (o.dataCaptureModal.prototype.init = function (n) {
        const i = this;
        if (
          ((i.campaignId = n.campaignId),
          (i.minimumAge = n.minimumAge),
          (i.submitSignedInForm = n.submitSignedInForm),
          (i.answer = n.answer),
          (i.dataCaptureType = n.dataCaptureType),
          (i.userHasEntered =
            "true" === t.localStorage.getStorage(`DC_${i.campaignId}`)),
          dataLayer.push({
            event: "dc_open_modal",
            dcCampaignId: i.campaignId,
            signedInUser: o.userData?.signedIn ? "signedIn" : "signedOut",
          }),
          i.setTranslations(),
          i.userHasEntered)
        )
          i.showSuccessMessages();
        else {
          if (o.userData?.signedIn) {
            if (
              ((i.isUserLoggedIn = !0),
              i.signedOutTitle.classList.add("u-hide"),
              i.signInContainer.classList.add("u-hide"),
              (i.userName.innerHTML = `${o.userData.first_name} ${
                o.userData.last_name || ""
              }`),
              i.signedInContainer.classList.remove("u-hide"),
              i.submitSignedInForm ||
                (i.submitBtn.innerHTML = e.lookup("label.updatePreferences")),
              n.minimumAge && o.userData.date_of_birth)
            ) {
              if (
                moment().diff(o.userData.date_of_birth, "years") <=
                parseInt(n.minimumAge)
              )
                return void i.showErrorMessages("ageConsent");
            }
            a.dataCaptureHelpers.renderForm(n, i.dataCaptureForm, !0);
            const t = o.userData.followed_clubs.find((o) => o.is_favourite);
            (t && void 0 !== t) || i.renderFavouriteClub(n);
          } else
            (i.isUserLoggedIn = !1),
              n.signInState === p && i.toggleSignInScreen(!1, !0),
              a.dataCaptureHelpers.renderForm(n, i.dataCaptureForm, !1),
              i.renderFavouriteClub(n);
          i.renderOptsIn(n),
            a.dataCaptureHelpers.setFormListeners(
              i.dataCaptureForm,
              i.dataCaptureType
            );
        }
      }),
      (o.dataCaptureModal.prototype.setTranslations = function () {
        const o = this;
        let a = e.lookup(`label.dataCapture.signInText.${o.campaignId}`),
          t = e.lookup(`label.dataCapture.noPLAccount.${o.campaignId}`),
          n = e.lookup(`label.dataCapture.infoText.${o.campaignId}`),
          i = !0;
        a === `label.dataCapture.signInText.${o.campaignId}` &&
          (a = e.lookup("label.dataCapture.signInText")),
          t === `label.dataCapture.noPLAccount.${o.campaignId}` &&
            (t = e.lookup("label.dataCapture.noPLAccount")),
          n === `label.dataCapture.infoText.${o.campaignId}` &&
            ((n = e.lookup("label.dataCapture.infoText")),
            "label.dataCapture.infoText" === n && (i = !1)),
          (o.signInTitle.innerHTML = a),
          (o.signedOutTitle.innerHTML = t),
          i &&
            ((o.infoText.innerHTML = n), o.infoText.classList.remove("u-hide"));
      }),
      (o.dataCaptureModal.prototype.renderOptsIn = function (t) {
        const p = this,
          l = p.container.querySelector(".js-opt-in-container"),
          s = p.container.querySelector(".js-club-opt-in-container");
        if (!l) return null;
        let r = !1;
        ("true" !== t.emailOptInFPL && "true" !== t.emailOptInPL) || (r = !0);
        const u = t.clubOptIns ? t.clubOptIns.split(",") : [],
          d = t.sponsorOptIns ? t.sponsorOptIns.split(",") : [];
        a.dataCaptureHelpers.setModalPolicyText(
          p.container,
          p.campaignId,
          o.userData?.signedIn,
          r,
          u.length,
          d
        ),
          r &&
            ("true" === t.emailOptInFPL && d.unshift(i),
            "true" === t.emailOptInPL && d.unshift(n),
            d.forEach((t, n) => {
              const i =
                  o.userData?.pl_communications?.find(
                    (o) => o.plmarketing === parseInt(t)
                  ) || !1,
                s =
                  e.lookup(
                    `label.dataCapture.emailCommunications.${t}.${p.campaignId}`
                  ) !==
                  `label.dataCapture.emailCommunications.${t}.${p.campaignId}`
                    ? e.lookup(
                        `label.dataCapture.emailCommunications.${t}.${p.campaignId}`
                      )
                    : e.lookup(`label.dataCapture.emailCommunications.${t}`),
                r = {
                  isFirst: 0 === n,
                  containerTitle: e.lookup(
                    "label.dataCapture.emailCommunications.title"
                  ),
                  containerText: e.lookup(
                    "label.dataCapture.emailCommunications.summary"
                  ),
                  questionId: `optin_PL_${t}`,
                  checked: i ? "checked" : "",
                  value: t,
                  isSignedIn: o.userData.signedIn,
                  optInType: "communication",
                  title: s,
                  mandatory: !1,
                  type: "checkbox",
                  required: "",
                  validationMessage: "label.dataCapture.pl.validationMsg",
                  renderSVG: () => (o) =>
                    a.icon.renderSVG(o, "error-message__svg"),
                };
              l.innerHTML += Mustache.render(o.templates.formelementoptin, r);
            })),
          u.forEach((t, n) => {
            const i =
                o.clubData?.content?.find((o) => o.altIds.opta == t) || {},
              p =
                o.userData?.club_communications?.find(
                  (o) =>
                    o.club === parseInt(t.replace("t", "")) &&
                    o.club_communications
                ) || !1,
              l = {
                isFirst: 0 === n,
                containerTitle: e.lookup(
                  "label.dataCapture.clubCommunications.title"
                ),
                containerText: e.lookup(
                  "label.dataCapture.clubCommunications.summary"
                ),
                isSignedIn: o.userData.signedIn,
                questionId: `optin_club_${t}`,
                optInType: "club",
                value: t,
                checked: p ? "checked" : "",
                clubBadge: a.getClubBadge(t, "50"),
                clubBadgeRetina: a.getClubBadge(t, "50", !0),
                title: e.lookup("label.dataCapture.club.title", {
                  clubOptIn: i.shortName || "",
                }),
                mandatory: !1,
                type: "checkbox",
                required: "",
                validationMessage: "label.dataCapture.club.validationMsg",
              };
            s.innerHTML += Mustache.render(o.templates.formelementoptin, l);
          });
      }),
      (o.dataCaptureModal.prototype.renderFavouriteClub = function (t) {
        const n = this.container.querySelector(".js-favourite-club-container");
        if (!n) return null;
        const i = {
          title: e.lookup("label.dataCapture.favouriteClub"),
          type: "dropdown",
          required: "required",
          selectYourFavouriteClubLabel: e.lookup(
            "label.dataCapture.favouriteClub.selectYourFavouriteClub"
          ),
          validationMessage: e.lookup(
            "label.dataCapture.favouriteClub.validationMsg"
          ),
          clubs: o?.clubData?.content,
          renderSVG: () => (o) => a.icon.renderSVG(o, "error-message__svg"),
        };
        n.innerHTML += Mustache.render(o.templates.formelementfavouriteclub, i);
      }),
      (o.dataCaptureModal.prototype.toggleSignInScreen = function () {
        let o = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
          a = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
          t = arguments.length > 2 ? arguments[2] : void 0;
        const e = this;
        t && t.preventDefault(),
          a
            ? e.signInErrorMessage.classList.remove("u-hide")
            : e.signInErrorMessage.classList.add("u-hide"),
          o
            ? e.container.classList.remove("show-sign-in-form")
            : e.container.classList.add("show-sign-in-form");
      }),
      (o.dataCaptureModal.prototype.formSubmit = function () {
        const o = this;
        o.submitBtn.disabled = !0;
        const t = new FormData(o.dataCaptureForm),
          e = a.dataCaptureHelpers.customFormFieldsValid(
            o.dataCaptureForm,
            o.dataCaptureType
          ),
          n = a.dataCaptureHelpers.guestFormFieldsValid(
            o.dataCaptureForm,
            o.dataCaptureType
          );
        if (!o.dataCaptureForm.checkValidity() || !e || !n)
          return (
            o.dataCaptureForm.reportValidity(),
            ((o, a) => {
              const t =
                a.getBoundingClientRect().top + window.pageYOffset + -130;
              o.scrollTo({ top: t, behavior: "smooth" });
            })(o.scrollContainer, o.dataCaptureForm.querySelector(".invalid")),
            void (o.submitBtn.disabled = !1)
          );
        const i = a.dataCaptureHelpers.getFormDataModel(
          t,
          o.campaignId,
          o.dataCaptureType,
          o.container,
          o.answer
        );
        o.minimumAge &&
        i.date_of_birth &&
        a.dataCaptureHelpers.checkInvalidAge(o.minimumAge, i.date_of_birth)
          ? o.showErrorMessages("ageConsent")
          : o.sendDataToMiddleware(i);
      }),
      (o.dataCaptureModal.prototype.setFormValidationListeners = function () {
        const o = this;
        o.dataCaptureForm.addEventListener(
          "invalid",
          function (o) {
            o.preventDefault(), o.target.parentElement.classList.add("invalid");
          },
          !0
        ),
          o.dataCaptureForm.addEventListener(
            "focus",
            function (a) {
              a.preventDefault(),
                [...o.dataCaptureForm.querySelectorAll(".invalid")].forEach(
                  (o) => o.classList.remove("invalid")
                );
            },
            !0
          );
      }),
      (o.dataCaptureModal.prototype.sendDataToMiddleware = function (t) {
        const e = this;
        if (((e.formModel = t), o.userData.signedIn)) {
          a.dataCaptureHelpers.updateUserPrefs(t);
          if (!e.submitSignedInForm)
            return e.toggleModal(), void (e.submitBtn.disabled = !1);
        }
        dataLayer.push({
          event: "dc_submit",
          dcCampaignId: e.campaignId,
          signedInUser: e.isUserLoggedIn ? "signedIn" : "signedOut",
        }),
          fetch(o.environment.dataCapture, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify(t),
          })
            .then((o) => o.json())
            .then((o) => {
              o?.sentToTwoCircles
                ? e.showSuccessMessages(o)
                : e.showErrorMessages(o);
            })
            .catch(() => console.error("Unfortunately, there was an error."));
      }),
      (o.dataCaptureModal.prototype.showSuccessMessages = function () {
        const e = this;
        var n, i, p, l, s, r;
        (e.submitBtn.disabled = !1),
          (e.userHasEntered = !0),
          gtag("event", "conversion", {
            send_to: "AW-16874980412/ju_tCKbZsaIaELyIz-4-",
          }),
          (n = window),
          (i = document),
          (p = "script"),
          n.fbq ||
            ((l = n.fbq =
              function () {
                l.callMethod
                  ? l.callMethod.apply(l, arguments)
                  : l.queue.push(arguments);
              }),
            n._fbq || (n._fbq = l),
            (l.push = l),
            (l.loaded = !0),
            (l.version = "2.0"),
            (l.queue = []),
            ((s = i.createElement(p)).async = !0),
            (s.src = "https://connect.facebook.net/en_US/fbevents.js"),
            (r = i.getElementsByTagName(p)[0]).parentNode.insertBefore(s, r)),
          fbq("init", "348875522594632"),
          fbq("track", "PageView"),
          fbq("track", "CompleteRegistration"),
          (function (o, a, t) {
            o.TiktokAnalyticsObject = t;
            var e = (o[t] = o[t] || []);
            (e.methods = [
              "page",
              "track",
              "identify",
              "instances",
              "debug",
              "on",
              "off",
              "once",
              "ready",
              "alias",
              "group",
              "enableCookie",
              "disableCookie",
              "holdConsent",
              "revokeConsent",
              "grantConsent",
            ]),
              (e.setAndDefer = function (o, a) {
                o[a] = function () {
                  o.push([a].concat(Array.prototype.slice.call(arguments, 0)));
                };
              });
            for (var n = 0; n < e.methods.length; n++)
              e.setAndDefer(e, e.methods[n]);
            (e.instance = function (o) {
              for (var a = e._i[o] || [], t = 0; t < e.methods.length; t++)
                e.setAndDefer(a, e.methods[t]);
              return a;
            }),
              (e.load = function (o, a) {
                var n = "https://analytics.tiktok.com/i18n/pixel/events.js";
                a && a.partner;
                (e._i = e._i || {}),
                  (e._i[o] = []),
                  (e._i[o]._u = n),
                  (e._t = e._t || {}),
                  (e._t[o] = +new Date()),
                  (e._o = e._o || {}),
                  (e._o[o] = a || {}),
                  ((a = document.createElement("script")).type =
                    "text/javascript"),
                  (a.async = !0),
                  (a.src = n + "?sdkid=" + o + "&lib=" + t),
                  (o =
                    document.getElementsByTagName(
                      "script"
                    )[0]).parentNode.insertBefore(a, o);
              }),
              e.load("CUU950RC77UA8JMIV8CG"),
              e.page(),
              e.track("CompleteRegistration");
          })(window, document, "ttq"),
          dataLayer.push({
            event: "dc_vote_success",
            dcCampaignId: e.campaignId,
            signedInUser: e.isUserLoggedIn ? "signedIn" : "signedOut",
          }),
          a.event.dispatch(
            `common.event.DATA_CAPTURE.SUBMIT_${e.campaignId}`,
            { success: !0, campaignId: e.campaignId },
            document.body
          ),
          t.localStorage.setStorage(`DC_${e.campaignId}`, !0),
          e.dataCaptureForm.classList.add("u-hide"),
          e.signInContainer.classList.add("u-hide"),
          e.formContainer.classList.add("u-hide"),
          e.signedInContainer.classList.add("u-hide"),
          a.event.dispatch(
            `${a.event.DATA_CAPTURE.SUBMIT_SUCCESS}_${e.campaignId}`,
            { campaignId: e.campaignId },
            document.body
          ),
          e.isUserLoggedIn
            ? e.successFormSignedIn.classList.remove("u-hide")
            : (e.successFormSignedOut.classList.remove("u-hide"),
              e.formModel?.pl_communications?.length &&
                t.localStorage.setStorage(
                  o.cookiePrefix + "registration_prefs",
                  JSON.stringify({
                    pl_communications: e.formModel.pl_communications,
                  }),
                  15,
                  !0,
                  window.location.host.replace("www", "")
                ));
      }),
      (o.dataCaptureModal.prototype.showErrorMessages = function (o) {
        const n = this;
        (n.submitBtn.disabled = !1),
          dataLayer.push({
            event: "dc_vote_error",
            dcCampaignId: n.campaignId,
            signedInUser: n.isUserLoggedIn ? "signedIn" : "signedOut",
          }),
          a.event.dispatch(
            `common.event.DATA_CAPTURE.SUBMIT_${n.campaignId}`,
            { success: !1, campaignId: n.campaignId },
            document.body
          ),
          n.dataCaptureForm.classList.add("u-hide"),
          n.formContainer.classList.add("u-hide"),
          n.signInContainer.classList.add("u-hide"),
          n.signedInContainer.classList.add("u-hide");
        const i = n.scrollContainer.querySelector(".js-error-text");
        409 == o?.statusCode
          ? (t.localStorage.setStorage(`DC_${n.campaignId}`, !0),
            (i.innerHTML = e.lookup(
              "label.dataCapture.errorMessage.alreadySubmitted"
            )),
            a.event.dispatch(
              `${a.event.DATA_CAPTURE.SUBMIT_SUCCESS}_${n.campaignId}`,
              { campaignId: n.campaignId },
              document.body
            ))
          : (i.innerHTML =
              "ageConsent" === o
                ? e.lookup("label.dataCapture.errorMessage.ageConsent")
                : e.lookup("label.dataCapture.errorMessage.400Error")),
          n.errorForm.classList.remove("u-hide");
      }),
      (o.dataCaptureModal.prototype.showPassword = function () {
        const o = this;
        o.showPasswordText ||
          ((o.showPasswordText = o.container.querySelector(".js-show-text")),
          (o.hidePasswordText = o.container.querySelector(".js-hide-text")),
          (o.passwordInput = o.container.querySelector(".js-password-input"))),
          o.showPasswordText.classList.toggle("u-hide"),
          o.hidePasswordText.classList.toggle("u-hide"),
          "password" === o.passwordInput.type
            ? (o.passwordInput.type = "text")
            : (o.passwordInput.type = "password");
      });
    let l = document.querySelectorAll('[data-widget="data-capture-modal"]');
    for (let a = 0; a < l.length; a++) new o.dataCaptureModal(l[a]);
  })(PULSE.app, PULSE.app.common, PULSE.core, PULSE.I18N);
